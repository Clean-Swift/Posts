//
//  ListPostsConfigurator.swift
//  ShorterMethods
//
//  Created by Raymond Law on 1/11/16.
//  Copyright (c) 2016 Raymond Law. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

// MARK: Connect View, Interactor, and Presenter

extension ListPostsViewController: ListPostsPresenterOutput
{
  override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?)
  {
    router.passDataToNextScene(segue)
  }
}

extension ListPostsInteractor: ListPostsViewControllerOutput
{
}

extension ListPostsPresenter: ListPostsInteractorOutput
{
}

class ListPostsConfigurator
{
  // MARK: Object lifecycle
  
  class var sharedInstance: ListPostsConfigurator
  {
    struct Static {
      static var instance: ListPostsConfigurator?
      static var token: dispatch_once_t = 0
    }
    
    dispatch_once(&Static.token) {
      Static.instance = ListPostsConfigurator()
    }
    
    return Static.instance!
  }
  
  // MARK: Configuration
  
  func configure(viewController: ListPostsViewController)
  {
    let router = ListPostsRouter()
    router.viewController = viewController
    
    let presenter = ListPostsPresenter()
    presenter.output = viewController
    
    let interactor = ListPostsInteractor()
    interactor.output = presenter
    
    viewController.output = interactor
    viewController.router = router
  }
}
